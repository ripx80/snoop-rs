name: ci

on:
  push:
  pull_request:
  branches:
    - master
  schedule:
  - cron: '00 01 * * *'

permissions:
  contents: read

env:
  RUSTFLAGS: -Dwarnings
  RUST_BACKTRACE: 1
  CARGO_TERM_COLOR: always

jobs:
  test:
    name: test
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
        - build: pinned
          os: ubuntu-latest
          rust: 1.74.0
        # - build: stable
        #   os: ubuntu-latest
        #   rust: stable
        # - build: beta
        #   os: ubuntu-latest
        #   rust: beta
        # - build: nightly
        #   os: ubuntu-latest
        #   rust: nightly
        # - build: stable-musl
        #   os: ubuntu-latest
        #   rust: stable
        #   target: x86_64-unknown-linux-musl
        # - build: stable-x86
        #   os: ubuntu-latest
        #   rust: stable
        #   target: i686-unknown-linux-gnu
        # - build: stable-aarch64
        #   os: ubuntu-latest
        #   rust: stable
        #   target: aarch64-unknown-linux-gnu
        # - build: stable-arm-gnueabihf
        #   os: ubuntu-latest
        #   rust: stable
        #   target: armv7-unknown-linux-gnueabihf
        # - build: stable-arm-musleabihf
        #   os: ubuntu-latest
        #   rust: stable
        #   target: armv7-unknown-linux-musleabihf
        # - build: stable-arm-musleabi
        #   os: ubuntu-latest
        #   rust: stable
        #   target: armv7-unknown-linux-musleabi
        # - build: stable-powerpc64
        #   os: ubuntu-latest
        #   rust: stable
        #   target: powerpc64-unknown-linux-gnu
        # - build: stable-s390x
        #   os: ubuntu-latest
        #   rust: stable
        #   target: s390x-unknown-linux-gnu
        # - build: macos
        #   os: macos-latest
        #   rust: nightly
        # - build: win-msvc
        #   os: windows-2022
        #   rust: nightly
        # - build: win-gnu
        #   os: windows-2022
        #   rust: nightly-x86_64-gnu
    steps:
        - uses: actions/checkout@v4
        - uses: dtolnay/rust-toolchain@master
          with:
            toolchain: ${{ matrix.rust }}
        - name: run full test
          run: cargo test --features full
        - name: build
          run: cargo build --verbose
        - name: build full feature
          run: cargo build --verbose --features full

  rustfmt:
    runs-on: ubuntu-latest
    steps:
    - name: checkout repo
      uses: actions/checkout@v4
    - name: install rust
      uses: dtolnay/rust-toolchain@master
      with:
        toolchain: stable
        components: rustfmt
    - name: Check formatting
      run: cargo fmt --all --check

  docs:
    runs-on: ubuntu-latest
    steps:
    - name: checkout repo
      uses: actions/checkout@v4
    - name: install rust
      uses: dtolnay/rust-toolchain@master
      with:
        toolchain: stable
    - name: check doc
      env:
        RUSTDOCFLAGS: -D warnings
        run: cargo doc --features full --no-deps --document-private-items

  clippy:
    name: clippy
    runs-on: ubuntu-latest
    if: github.event_name != 'pull_request'
    timeout-minutes: 45
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@clippy
      - run: cargo clippy --features full -- -Dclippy::all -Dclippy::pedantic
